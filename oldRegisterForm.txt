  <div class="container">
    
      <form #registerForm ="ngForm" class="needs-validation" (ngSubmit)="goToLogin()">
         
              <div class="form-group" [class.has-error]="fullname.touched && fullname.invalid">
                <label for="fname">First Name *</label>
                <input type="text" class="form-control" id="fname" required placeholder="First Name" name="fname" [(ngModel)]="fname" #fullname="ngModel">
                <span class="help-block" *ngIf="fullname.touched && fullname.errors?.required">
                  Please provide First name.
                </span>
              </div>
             
              <div class="form-group" [class.has-error]="lastname.touched && lastname.invalid">
                <label for="lname">Last Name *</label>
                <input type="text" name="lname" [(ngModel)]="lname" class="form-control" id="lname" placeholder="Last Name" #lastname="ngModel" required>
                <span class="help-block" *ngIf="lastname.touched && lastname.errors?.required">
                  Please provide Last name.
                </span>
              </div>

              <div class="form-group">
                <label for="middlename">MiddleName</label>
                <input type="text" name="middlename" [(ngModel)]="middlename" class="form-control" id="middlename" placeholder="Middle Name" #Mname="ngModel">
            </div>
          
              <div class="form-group" [class.has-error]="(emailControl.invalid && emailControl.touched) || (emailControl.errors?.pattern && emailControl.touched)">
                  <label for="email">Email *</label>
                  <input type="email" name="email" required pattern="^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$" [(ngModel)]="email" class="form-control" id="email" placeholder="Email" #emailControl="ngModel">
                  <span *ngIf="emailControl.errors?.required && emailControl.touched" class="help-block">Email is required!</span>
                  <span *ngIf="emailControl.errors?.pattern && emailControl.touched" class="help-block">Invalid Email!</span>
              </div> 
              
             
                    <div class="form-group" [class.has-error]="pswControl.touched && pswControl.invalid">
                        <label for="password">Password *</label>
                        <input type="password" name="password" [(ngModel)]="password" class="form-control" id="password" placeholder="Password" (change)="cnfpswControl.control.updateValueAndValidity()" #pswControl="ngModel" required>
                        <span class="help-block" *ngIf="pswControl.touched && pswControl.errors?.required">
                            Please provide password.
                        </span>
                    </div>

                    <div class="form-group" [class.has-error]="cnfpswControl.touched && cnfpswControl.invalid">
                        <label for="cnfPassword">Confirm Password *</label>
                        <input type="password" name="cnfPassword" validateEqual="password" [(ngModel)]="cnfPassword" class="form-control" id="cnfPassword" placeholder="Type Password again" #cnfpswControl="ngModel" required>
                        <span class="help-block" *ngIf="cnfpswControl.touched && cnfpswControl.errors?.validateEqual && !cnfpswControl.errors?.required">
                          Password does't match. 
                        </span>
                        <span class="help-block" *ngIf="cnfpswControl.touched && cnfpswControl.errors?.required">
                          Please enter password again.
                        </span>
                    </div>

             
          
          <div class="form-group" [class.has-error]="address.touched && address.invalid">
              <label for="Address1" class="form-control-label">Address *</label>
              <input type="text" name="Address1" required [(ngModel)]="Address1" class="form-control" id="Address1" placeholder="1234 Main St" #address="ngModel">
              <span class="help-block" *ngIf="address.touched && address.errors?.required">
                  Please provide Street Address
              </span>
          </div>
          
          
            <div class="form-group" [class.has-error]="cityControl.touched && cityControl.invalid">
                  <label for="City">City *</label>
                  <input type="text" name="City" required [(ngModel)]="City" id="City" class="form-control" #cityControl="ngModel">
                  <span class="help-block" *ngIf="cityControl.touched && cityControl.errors?.required">
                      Please enter City.
                  </span>
            </div>
            <div class="form-group" [class.has-error]="stateControl.touched && stateControl.invalid">
                <label for="State">State *</label>
                <select id="State" class="form-control" required name="state" [(ngModel)]="state" #stateControl="ngModel">
                  <option>CA</option>
                  <option>TX</option>
                </select>
                <span class="help-block" *ngIf="stateControl.touched && stateControl.errors?.required">
                  Please select State.
                </span>
            </div>
            <div class="form-group" [class.has-error]="zip.touched && zip.invalid">
                <label for="inputZip">Zip *</label>
                <input type="text" name="zipcode" required [(ngModel)]="zipcode" class="form-control" id="inputZip" #zip="ngModel">
                <span class="help-block" *ngIf="zip.touched && zip.errors?.required">
                  Please enter Zip Code.
                </span>
            </div>
           
          
            <div class="form-group" [class.has-error]="terms.touched && terms.invalid">
            <div class="form-check form-control">
              <input type="checkbox" required #terms="ngModel" name="terms" [(ngModel)]="agreeterms" id="agreeterms">
              <label class="form-check-label" for="agreeterms">
                Agree to the Terms and Conditions. *
              </label>
            </div>
            <span class="help-block" *ngIf="terms.touched && terms.errors?.required">
              Need to accept Terms and Conditions.
            </span>
          </div>
          <button type="submit" class="btn btn-primary" [class.disabled]="registerForm.invalid">Register </button>
        </form>

        {{registerForm.value | json}}

</div>
